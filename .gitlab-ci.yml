# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml


# define stages of runner. at the moment,
# just test (no build or deploy).
stages:
  - test
  - build
  - release

# define test job
test-job:
  stage: test
  script:
    # run the R CMD check on the package (this path)
    - R CMD check ./ --no-manual
    # run the devtools test
    - R -e 'devtools::test()'
    
build-job:
  stage: build
  script:
    # install
    - R -e 'devtools::install()
    
release:
  stage: release
  image: alpine:latest
  needs: ["build-job"]
  rules:
    - if: '$CI_COMMIT_TAG'    # only run when you create a Git tag
  script:
    - echo "Creating release for $CI_COMMIT_TAG"
  release:
    tag_name: "$CI_COMMIT_TAG"
    name: "Release $CI_COMMIT_TAG"
    description: "Automated release of R package."
    assets:
      links:
        - name: "R package tarball"
          filepath: "*.tar.gz"
          link_type: package
  artifacts:
    paths:
      - "*.tar.gz"
