% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mfft.R
\name{mfft_complex}
\alias{mfft_complex}
\alias{mfft_real}
\alias{mfft}
\title{Frequency Modified Fourier transform for real and  complex series}
\usage{
mfft_complex(
  x_data,
  n_freq = 10,
  min_freq = NULL,
  max_freq = NULL,
  correction = 1,
  fast = TRUE
)

mfft_real(
  x_data,
  n_freq = 5,
  min_freq = NULL,
  max_freq = NULL,
  correction = 1,
  fast = TRUE
)

mfft_complex(
  x_data,
  n_freq = 10,
  min_freq = NULL,
  max_freq = NULL,
  correction = 1,
  fast = TRUE
)

mfft(
  x_data,
  n_freq = 15,
  min_freq = NULL,
  max_freq = NULL,
  correction = 1,
  force_complex = FALSE
)
}
\arguments{
\item{x_data}{Numeric vector or time series (real or complex, depending on
the routine). The signal to analyse.}

\item{n_freq}{Integer. Number of frequencies to extract.}

\item{min_freq, max_freq}{Optional numeric scalars. Bounds for the angular
frequencies considered in the search. Units depend on the sampling of
\code{x_data}. Defaults are 0 and \eqn{\pi} for real series, and
\eqn{-\pi} and \eqn{\pi} for complex series.}

\item{correction}{Frequency correction scheme (integer code). Options are:
\itemize{
  \item 0: no correction (equivalent to Laskar).
  \item 1: linear approximation.
  \item 2: correction using synthetic data.
  \item 3: second-order correction (currently implemented for complex only).
}}

\item{fast}{Logical. If \code{TRUE}, uses analytical formulations for the
cross-products of Fourier components; if \code{FALSE}, they are computed
numerically.}

\item{force_complex}{in the `mfft` function, assume x_data is complex, even if it contains real numbers only}
}
\value{
a `discreteSpectrum` object, based on a data.frame with columns "Freq", "Amp", and "Phases".

A \code{discreteSpectrum} object, based on a \code{data.frame} with
  columns:
  \itemize{
    \item \code{Freq}: estimated angular frequencies
    \item \code{Amp}: amplitudes of the extracted components
    \item \code{Phases}: phases of the extracted components
  }
}
\description{
Iteratively extracts dominant frequencies from a real-valued time series
using a modified Fourier transform with frequency correction. The function
applies a Hanning window to the data, and amplitudes are renormalised through
a Gram–Schmidt procedure based on cross-products of Fourier components.
The cross-products can be computed either via analytical approximation
(faster, following Sidlichovsky and Nesvorny) or explicitly by numerical
integration.

R implementation of the Modified Fourier Transform (MFT) based on the 
algorithm of Sidlichovský and Nesvorný (1997). The implementation prioritises
code clarity, portability, and extensibility over efficiency: it is slower
than the original C implementation, but straightforward to adapt to other
languages and contexts.
}
\details{
If frequencies \code{nu} are supplied, the routine uses them directly;
otherwise, it iteratively maximises the Fourier transform using golden
section search. The
function is typically called from [mfft_real()] once, and possibly a second
time to refine amplitudes and frequencies iteratively.

Two variants are provided:
\itemize{
  \item \code{mfft_real}: designed for real-valued time series (original development).
  \item \code{mfft_complex}: designed for complex-valued time series.
  \item \code{mfft}: sends to one or the other depending on the data
}

Both routines iteratively extract dominant frequencies, applying a Hanning
window and Gram–Schmidt orthogonalisation. In `mfft_complex`, the signal
is expressed as sum of complex exponentiasls; in `mfft_real`,it is expressed as a sum
of sinusoids (cosines and sines). Both routines allow for optional frequency correction at
different levels. The process starts with identifying the Fourier component
corresponding to the maximum power, storing the cosine of the corresponding
frequency as an element of the decomposition, and orthogonalising. In `mffht_real`,
a cosine function is taken first, followed by a corresponding sine function is then included, followed by further
orthogonalisation. Compared with the exponential basis \eqn{e^{i \omega t}},
the treatment for real signals attention to the non-unit norm of cosines and sines, and an
adapted frequency correction procedure.
}
\note{
The adaptation of the Modified Fourier Transform for real-valued time
  series (\code{mfft_real}) is an original development of the author.
}
\examples{

data(harmonic_sample)
data_to_analyse <- develop(harmonic_sample)
spec <- mfft_real(data_to_analyse)
print(spec)

}
\references{
\insertRef{sidlichovsky97aa}{gtseries}

Sidlichovský, M., & Nesvorný, D. (1997). Frequency modified Fourier transform
method. \emph{Celestial Mechanics and Dynamical Astronomy}, 65(2–3), 137–148.
}
\author{
Michel Crucifix
}
